{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "NewNetwork": {
      "type": "bool",
      "defaultValue": true
    },
    "ServerOsVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "2019-Datacenter"
      ]
    },
    "ClientOsVersion": {
      "type": "string",
      "defaultValue": "win10-22h2-ent",
      "allowedValues": [
        "Win7-SP1-ENT-N-x64",
        "Win81-ENT-N-x64",
        "Windows-10-N-x64",
        "win10-22h2-ent"
      ]
    },
    "VmSize": {
      "type": "string",
      "defaultValue": "Basic_A2",
      "allowedValues": [
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ]
    },
    "AdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "labadmin"
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "AdServerName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ContosoDC"
    },
    "ClientComputerNames": {
      "type": "array",
      "defaultValue": ["Victim-PC", "Admin-PC"]
    },
    "DomainName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "contoso.com"
    },
    "gatewayRootCert": {
      "type": "string",
      "defaultValue": ""
    },
    "gatewayRootCertName": {
      "type": "string",
      "defaultValue": "gatewayrootcert"
    },
    "CommonTemplateUri": {
      "type":"string",
      "defaultValue":"https://raw.githubusercontent.com/dmcwee/labs/master/Common"
    },
    "DSCLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      },
      "defaultValue": "https://raw.githubusercontent.com/dmcwee/labs/master/MDILab/DSC/MdiLabDcDSC.zip"
    },
    "AdDscFile": {
      "type": "string",
      "metadata": {
        "description": "The DSC settings file for the domain controller"
      },
      "defaultValue": "MdiLabDcDSC.ps1"
    }
  },
  "variables": {
    /* VNet Variables */
    "NetworkPrefix": "10.0.0.0/16",
    "SubNet1Name": "mdiNet",
    "SubNet1Prefix": "10.0.24.0/24",
    "GatewaySubnetPrefix": "10.0.2.0/24",

    "location": "[resourceGroup().location]",
    "labTagValue": "MDI"
  },
  "resources": [
    // Create the Network
    {
      "name": "networkTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "condition":"[parameters('NewNetwork')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('CommonTemplateUri'), '/network.json')]"
        },
        "parameters": {
          "vNetName": {
            "value": "[concat(resourceGroup().name, '-vnet')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "labTagValue": {
            "value": "[variables('labTagValue')]"
          },
          "networkRange": {
            "value": "[variables('NetworkPrefix')]"
          }
        }
      }
    },

    {
      "name": "subnetTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "dependsOn": ["Microsoft.Resources/deployments/networkTemplate"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('CommonTemplateUri'), '/subnet.json')]"
        },
        "parameters": {
          "subnetName": {
            "value": "[variables('SubNet1Name')]"
          },
          "vnetName": {
            "value":"[concat(resourceGroup().name, '-vnet')]"
          },
           "subnetRange": {
             "value": "[variables('SubNet1Prefix')]"
          }
        }
      }
    },
    // Create the Gateway
    {
      "name": "gatewayTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "condition":"[parameters('NewNetwork')]",
      "dependsOn": ["Microsoft.Resources/deployments/subnetTemplate"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('CommonTemplateUri'), '/p2sGateway.json')]"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "labTagValue": {
            "value": "[variables('labTagValue')]"
          },
          "vNetName": {
            "value": "[concat(resourceGroup().name, '-vnet')]"
          },
          "gatewayCertName": {
            "value": "[parameters('gatewayRootCertName')]"
          },
          "gatewayCertData": {
            "value": "[parameters('gatewayRootCert')]"
          },
          "gatewayRange": {
            "value": "[variables('GatewaySubnetPrefix')]"
          }
        }
      }
    },

    // Create Domain Controller
    {
      "name": "linkedDCTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "dependsOn": ["Microsoft.Resources/deployments/subnetTemplate"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('CommonTemplateUri'), '/domainController.json')]"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[reference('subnetTemplate').outputs.subnetId.value]"
          },
          "privateIP": {
            "value": "10.0.24.4"
          },
          "labTagValue": {
            "value": "[variables('labTagValue')]"
          },
          "vmName": {
            "value": "[parameters('AdServerName')]"
          },
          "serverOS": {
            "value": "[parameters('ServerOsVersion')]"
          },
          "userName": {
            "value": "[parameters('AdminUserName')]"
          },
          "password": {
            "value": "[parameters('AdminPassword')]"
          },
          "storageType": {
            "value": "[parameters('storageType')]"
          },
          "dscLocation": {
            "value": "[parameters('DSCLocation')]"
          },
          "dscFile": {
            "value": "[parameters('AdDscFile')]"
          },
          "domain": {
            "value": "[parameters('DomainName')]"
          }
        }
      }
    },

    // Create Client VMs
    {
      "copy": {
        "name": "clientCopy",
        "count": "[length(parameters('ClientComputerNames'))]"
      },
      "name": "[concat('linkedClientTemplate', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "dependsOn": ["Microsoft.Resources/deployments/subnetTemplate"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('CommonTemplateUri'), '/clientMachine.json')]"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[reference('subnetTemplate').outputs.subnetId.value]"
          },
          "privateIP": {
            "value": "[concat('10.0.24.', copyIndex(5))]"
          },
          "labTagValue": {
            "value": "[variables('labTagValue')]"
          },
          "vmName": {
            "value": "[parameters('ClientComputerNames')[copyIndex()]]"
          },
          "userName": {
            "value": "[parameters('AdminUserName')]"
          },
          "password": {
            "value": "[parameters('AdminPassword')]"
          },
          "storageType": {
            "value": "[parameters('storageType')]"
          },
          "SKU": {
            "value": "[parameters('ClientOsVersion')]"
          },
          "vmSize": {
            "value": "[parameters('VmSize')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
